library(MASS)
library(car)
library(leaps)
library(My.stepwise)
library(lars)
# See question 1 of Chapter 7, p. 252.
mantel.data <- read.table("code/Mantel.txt", header=TRUE)
plot(mantel.data)
mantel.mod = lm(Y ~ X1 + X2 + X3. data=mantel.data)
mantel.mod = lm(Y ~ X1 + X2 + X3, data=mantel.data)
X<-cbind(mantel.data$X1, mantel.data$X2, mantel.data$X3)
b<-regsubsets(X, Y)
summary(b)
b<-regsubsets(X, Y)
b<-regsubsets(X, mantel.data$Y)
summary(b)
par(mfrow=c(1,1))
subsets(b, statistic=c("adjr2"))
subsets(b, statistic=c("bic"))
# backward using BIC
mselect.mod.mod2 = step(mselect.mod.ful, direction="backward", k=log(1000))
mselect.data <- read.csv("code/mselect.csv", header=TRUE)
# read the data
mselect.data <- read.csv("code/mselect.csv", header=TRUE)
plot(mselect.data)
# take out all variables which aren't signifigant
# (but keep any main effect if its involved in higher order term)
x2sq = x2^2
mselect.mod.ful <- lm(y ~ .*. + poly(x1, 2) + poly(x2, 2) + poly(x3, 2) + poly(x5, 2), data=mselect.data)
mselect.mod.mod1 <- lm(y ~ x1 + x2 + x3 + x4 + x5 + x2:x5 + x3:x4 + x2sq, data=mselect.data)
# compare full mod and mod 1
# get the F-stat for reduced model versus full model
summary(mselect.mod.ful)
# take out all variables which aren't signifigant
# (but keep any main effect if its involved in higher order term)
x2sq = x2^2
# take out all variables which aren't signifigant
# (but keep any main effect if its involved in higher order term)
x2sq = mselect.data$x2^2
mselect.mod.ful <- lm(y ~ .*. + poly(x1, 2) + poly(x2, 2) + poly(x3, 2) + poly(x5, 2), data=mselect.data)
mselect.mod.mod1 <- lm(y ~ x1 + x2 + x3 + x4 + x5 + x2:x5 + x3:x4 + x2sq, data=mselect.data)
# compare full mod and mod 1
# get the F-stat for reduced model versus full model
summary(mselect.mod.ful)
summary(mselect.mod.mod1)
anova(mselect.mod.mod1, mselect.mod.ful)
# check for multicollinearity using VIFs
vif(mselect.mod.mod1)
# backward using BIC
mselect.mod.mod2 = step(mselect.mod.ful, direction="backward", k=log(1000))
# make a model with what backward BIC chose
mselect.mod.mod2 = lm(y ~ x1 + x2 + x3 + x4 + x2sq + x3:x4, data=mselect.data)
vif(mselect.mod.mod2)
# backward using BIC
mselect.mod.mod2 = step(mselect.mod.ful, direction="backward", k=log(1000))
# make a model with what backward BIC chose
#mselect.mod.mod2 = lm(y ~ x1 + x2 + x3 + x4 + x2sq + x3:x4, data=mselect.data)
vif(mselect.mod.mod2)
mselect.mod.mod2
*/
library(MASS)
# make a model with what backward BIC chose
vif(mselect.mod.mod2)
# make a model with what backward BIC chose
vif(mselect.mod.mod2)
